<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C程序设计语言读书笔记2</title>
      <link href="/2020/04/04/c-cheng-xu-she-ji-yu-yan-du-shu-bi-ji-2/"/>
      <url>/2020/04/04/c-cheng-xu-she-ji-yu-yan-du-shu-bi-ji-2/</url>
      
        <content type="html"><![CDATA[<h2 id="练习1-12"><a href="#练习1-12" class="headerlink" title="练习1-12"></a>练习1-12</h2><p>编写一个程序，以每行一个单词的形式打印其输出</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> IN 1</span><span class="token macro property">#<span class="token directive keyword">define</span> OUT 0</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> state<span class="token punctuation">,</span> c<span class="token punctuation">;</span>    state <span class="token operator">=</span> OUT<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">>=</span><span class="token number">65</span><span class="token operator">&amp;&amp;</span>c<span class="token operator">&lt;=</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>c<span class="token operator">>=</span><span class="token number">97</span><span class="token operator">&amp;&amp;</span>c<span class="token operator">&lt;=</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            state <span class="token operator">=</span> IN<span class="token punctuation">;</span>            <span class="token function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>state<span class="token operator">==</span>IN<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> OUT<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> K&amp;R </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ Primer1.6节练习</title>
      <link href="/2020/04/02/c-primer1.6-jie-lian-xi/"/>
      <url>/2020/04/02/c-primer1.6-jie-lian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="书店程序"><a href="#书店程序" class="headerlink" title="书店程序"></a>书店程序</h2><p>头文件Sales_item.h 包含Sales_item类 <a href="https://ptgmedia.pearsoncmg.com/images/9780321714114/downloads/GCC_4_7_0.zip" target="_blank" rel="noopener">下载链接</a></p><pre class="line-numbers language-c++"><code class="language-c++">#include<iostream>#include"Sales_item.h"int main(){    Sales_item total;    //保存下一条交易目录的变量    if(std::cin >> total){    //读入第一条交易数据        Sales_item trans;    //保存和的变量        while(std::cin >> trans){    //读入并处理剩余交易目录            if(total.isbn()==trans.isbn()){        //如果处理的书相同                total += trans;    //更新总销售额            }else{    //打印前一本书的结果                std::cout << total << std::endl;                total = trans;    //令total表示下一本书的销售额            }        }        std::cout << total << std::endl;    }else{    //没有输入        std::cerr << "没有数据输入！" << std::endl;        return -1;    }    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>成员函数</strong>（member function）是定义为类的一部分函数，有时也被称为<strong>方法</strong>（method）</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> C++ </tag>
            
            <tag> C++ Primer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C程序设计语言读书笔记1</title>
      <link href="/2020/04/01/c-cheng-xu-she-ji-yu-yan-du-shu-bi-ji-1/"/>
      <url>/2020/04/01/c-cheng-xu-she-ji-yu-yan-du-shu-bi-ji-1/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="练习-1-8"><a href="#练习-1-8" class="headerlink" title="练习 1-8"></a>练习 1-8</h1><h2 id="编写一个统计空格、制表符与换行符个数的程序"><a href="#编写一个统计空格、制表符与换行符个数的程序" class="headerlink" title="编写一个统计空格、制表符与换行符个数的程序"></a>编写一个统计空格、制表符与换行符个数的程序</h2><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> cnts<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> cntt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> cntn<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">char</span> c<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//声明变量</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//输入字符，输入为EOF时退出循环</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//检测空格</span>            cnts<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\t'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token comment" spellcheck="true">//检测制表符</span>            cntt<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token comment" spellcheck="true">//检测换行符</span>            cntn<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d %d"</span><span class="token punctuation">,</span> cnts<span class="token punctuation">,</span> cntt<span class="token punctuation">,</span> cntn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="练习1-9"><a href="#练习1-9" class="headerlink" title="练习1-9"></a>练习1-9</h1><h2 id="编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替"><a href="#编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替" class="headerlink" title="编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替"></a>编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替</h2><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> c<span class="token punctuation">;</span><span class="token keyword">int</span> flag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//当空格第一次出现输出空格，否则不输出</span>                <span class="token function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>                flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//将空格的状态初始化</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="练习1-10"><a href="#练习1-10" class="headerlink" title="练习1-10"></a>练习1-10</h1><h2 id="编写一个将输入复制到输出的程序，并将其中的制表符替换为-t，把回退符替换为-b，把反斜杠替换为"><a href="#编写一个将输入复制到输出的程序，并将其中的制表符替换为-t，把回退符替换为-b，把反斜杠替换为" class="headerlink" title="编写一个将输入复制到输出的程序，并将其中的制表符替换为\t，把回退符替换为\b，把反斜杠替换为\"></a>编写一个将输入复制到输出的程序，并将其中的制表符替换为\t，把回退符替换为\b，把反斜杠替换为\</h2><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> c<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\t'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出'\'</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//输出't' 下面同理</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\b'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> K&amp;R </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国大陆购买Xbox Game Pass的方法</title>
      <link href="/2020/03/24/zhong-guo-da-lu-gou-mai-xbox-game-pass-de-fang-fa/"/>
      <url>/2020/03/24/zhong-guo-da-lu-gou-mai-xbox-game-pass-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="在网页订阅（需要梯子）"><a href="#在网页订阅（需要梯子）" class="headerlink" title="在网页订阅（需要梯子）"></a>在网页订阅（需要梯子）</h2><ol><li><a href="https://www.icats.cc/" target="_blank" rel="noopener">梯子</a></li><li>更改酸酸乳的配置<br> 右键小飞机图标<br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/pic1.png" alt="img1"><br> 代理规则选择全局<br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200324182641.png" alt="img2"><br> 系统代理模式选择全局</li><li>进入<a href="https://www.xbox.com/zh-HK/xbox-game-pass/pc-games?xr=shellnav" target="_blank" rel="noopener">官网</a></li><li>点击右上角<strong>开始使用</strong>下载客户端</li><li>进入<a href="https://www.xbox.com/zh-hk/xbox-game-pass/#join" target="_blank" rel="noopener">购买页面</a>购买</li><li>支持支付宝连续包月付款，不支持花呗。支付完成后就可以进入客户端下载XGP提供的游戏了</li></ol><h2 id="在客户端订阅"><a href="#在客户端订阅" class="headerlink" title="在客户端订阅"></a>在客户端订阅</h2><ol><li>进入<a href="https://www.xbox.com/zh-hk/" target="_blank" rel="noopener">香港xbox官网</a></li><li>点击xbox game pass for pc<br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200324183539.png" alt="img3"><br> 点击右上角<strong>开始使用</strong>下载客户端</li><li>更改自己的微软账户地址；进入<a href="https://www.microsoft.com/zh-CN/" target="_blank" rel="noopener">微软官网</a></li><li>右上角进入<strong>我的Microsoft账户</strong>，点击<strong>更多操作</strong>–&gt;<strong>编辑个人资料</strong>–&gt;<strong>编辑国家/地区</strong>改为<strong>香港特别行政区</strong></li><li>进入客户端并进入<strong>settings</strong><img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200324185440.png" alt="img4"></li><li>进入<strong>Subscriptions</strong>下的选项，之后选择<strong>Xbox Game Pass for PC(Beta)</strong>进入支付页面，支持支付宝，不支持花呗（这里不知道为什么一直显示我的账户在United States）</li></ol><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>凡是微软发行的游戏会一直在XGP上，其他游戏在一个月内可以玩但是一个月之后就不一定了。</p>]]></content>
      
      
      <categories>
          
          <category> gaming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xbox </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>递归实现进制转换（C语言描述）</title>
      <link href="/2020/03/24/di-gui-shi-xian-jin-zhi-zhuan-huan-c-yu-yan-miao-shu/"/>
      <url>/2020/03/24/di-gui-shi-xian-jin-zhi-zhuan-huan-c-yu-yan-miao-shu/</url>
      
        <content type="html"><![CDATA[<pre><code>#include&lt;stdio.h&gt;void print(int x, int n){    if(x%n&lt;10){        printf(&quot;%d&quot;, x%n);    }else{        printf(&quot;%c&quot;, x-10+&#39;a&#39;);    }}void jzzh(int x, int n){    if(x){        jzzh(x/n, n);        print(x, n);    }}int main(){    int x, n;    scanf(&quot;%d %d&quot;, &amp;x, &amp;n);    jzzh(x, n);    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用WinSCP将本地文件上传至远程服务器</title>
      <link href="/2020/03/17/yong-winscp-jiang-ben-di-wen-jian-shang-chuan-zhi-yuan-cheng-fu-wu-qi/"/>
      <url>/2020/03/17/yong-winscp-jiang-ben-di-wen-jian-shang-chuan-zhi-yuan-cheng-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><a href="https://winscp.net/eng/download.php" target="_blank" rel="noopener">下载地址</a></p><p>安装完成后出现如下界面：<br><img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/winscp1.png" alt="img"></p><p>文件协议选择SFTP；主机名为服务器的外网IP. 然后输入服务器的系统用户名和密码即可登录。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WinSCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cannot get/错误</title>
      <link href="/2020/03/17/cannot-get-cuo-wu/"/>
      <url>/2020/03/17/cannot-get-cuo-wu/</url>
      
        <content type="html"><![CDATA[<p>如果_post文件夹下没有.md文件就会出现这种错误。</p><p>如果是其他问题导致可以尝试npm install.</p><p>或者进行以下步骤</p><ol><li>hexo init <folder></li><li>cd folder</li><li>npm install</li><li>npm install hexo-server –save</li><li>npm s</li></ol>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
