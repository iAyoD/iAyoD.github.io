<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《神经网络与深度学习》第3章编程练习</title>
      <link href="/2021/09/20/shen-jing-wang-luo-yu-shen-du-xue-xi-di-3-zhang-bian-cheng-lian-xi/"/>
      <url>/2021/09/20/shen-jing-wang-luo-yu-shen-du-xue-xi-di-3-zhang-bian-cheng-lian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="logistic-regression-exercise"><a href="#logistic-regression-exercise" class="headerlink" title="logistic_regression-exercise"></a>logistic_regression-exercise</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token triple-quoted-string string">'''生成数据集， 看明白即可无需填写代码'+' 从高斯分布采样 (X, Y) ~ N(3, 6, 1, 1, 0).'o' 从高斯分布采样 (X, Y) ~ N(6, 3, 1, 1, 0)'''</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> animation<span class="token punctuation">,</span> rc<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>display <span class="token keyword">import</span> HTML<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>cm <span class="token keyword">as</span> cm<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token operator">%</span>matplotlib inlinedot_num <span class="token operator">=</span> <span class="token number">100</span>x_p <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y_p <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>dot_num<span class="token punctuation">)</span>C1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>x_p<span class="token punctuation">,</span> y_p<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Tx_n <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y_n <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>dot_num<span class="token punctuation">)</span>C2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>x_n<span class="token punctuation">,</span> y_n<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Tplt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>C1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'+'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>C2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'g'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">)</span>data_set <span class="token operator">=</span> np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>C1<span class="token punctuation">,</span> C2<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>data_set<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''建立模型建立模型类，定义loss函数，定义一步梯度下降过程函数填空一：实现sigmoid的交叉熵损失函数(不使用tf内置的loss 函数)'''</span>epsilon <span class="token operator">=</span> <span class="token number">1e</span><span class="token operator">-</span><span class="token number">12</span><span class="token keyword">class</span> <span class="token class-name">LogisticRegression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>W <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span>             initial_value<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> minval<span class="token operator">=</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> maxval<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>b <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> initial_value<span class="token operator">=</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>trainable_variables <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>W<span class="token punctuation">,</span> self<span class="token punctuation">.</span>b<span class="token punctuation">]</span>    @tf<span class="token punctuation">.</span>function    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inp<span class="token punctuation">)</span><span class="token punctuation">:</span>        logits <span class="token operator">=</span> tf<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>inp<span class="token punctuation">,</span> self<span class="token punctuation">.</span>W<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>b <span class="token comment" spellcheck="true"># shape(N, 1)</span>        pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>logits<span class="token punctuation">)</span>        <span class="token keyword">return</span> pred@tf<span class="token punctuation">.</span>function<span class="token keyword">def</span> <span class="token function">compute_loss</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> label<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true">#     if not isinstance(label, tf.Tensor):</span><span class="token comment" spellcheck="true">#         label = tf.constant(label, dtype=tf.float32)</span>    label <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>label<span class="token punctuation">,</span> dtype <span class="token operator">=</span> tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>    pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>pred<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">'''============================='''</span>    <span class="token comment" spellcheck="true">#输入label shape(N,), pred shape(N,)</span>    <span class="token comment" spellcheck="true">#输出 losses shape(N,) 每一个样本一个loss</span>    <span class="token comment" spellcheck="true">#todo 填空一，实现sigmoid的交叉熵损失函数(不使用tf内置的loss 函数)</span>    <span class="token triple-quoted-string string">'''============================='''</span>    one <span class="token operator">=</span> tf<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>pred<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    losses <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>label <span class="token operator">*</span> tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>pred<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>one <span class="token operator">-</span> label<span class="token punctuation">)</span> <span class="token operator">*</span> tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>one <span class="token operator">-</span> pred<span class="token punctuation">)</span><span class="token punctuation">)</span>    loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>losses<span class="token punctuation">)</span>    pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>where<span class="token punctuation">(</span>pred<span class="token operator">></span><span class="token number">0.5</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>ones_like<span class="token punctuation">(</span>pred<span class="token punctuation">)</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>pred<span class="token punctuation">)</span><span class="token punctuation">)</span>    accuracy <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>label<span class="token punctuation">,</span> pred<span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> loss<span class="token punctuation">,</span> accuracy@tf<span class="token punctuation">.</span>function<span class="token keyword">def</span> <span class="token function">train_one_step</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> optimizer<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>        pred <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        loss<span class="token punctuation">,</span> accuracy <span class="token operator">=</span> compute_loss<span class="token punctuation">(</span>pred<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>loss<span class="token punctuation">,</span> model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span>    optimizer<span class="token punctuation">.</span>apply_gradients<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>grads<span class="token punctuation">,</span> model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> loss<span class="token punctuation">,</span> accuracy<span class="token punctuation">,</span> model<span class="token punctuation">.</span>W<span class="token punctuation">,</span> model<span class="token punctuation">.</span>b<span class="token triple-quoted-string string">'''实例化一个模型，进行训练'''</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    model <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>    opt <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>learning_rate<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span>    x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y <span class="token operator">=</span> list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span><span class="token operator">*</span>data_set<span class="token punctuation">)</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">)</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>x<span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#此处需要将x的类型从float64改为float32</span>    animation_fram <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        loss<span class="token punctuation">,</span> accuracy<span class="token punctuation">,</span> W_opt<span class="token punctuation">,</span> b_opt <span class="token operator">=</span> train_one_step<span class="token punctuation">(</span>model<span class="token punctuation">,</span> opt<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>        animation_fram<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>W_opt<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> W_opt<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> b_opt<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loss<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">20</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'loss: {loss.numpy():.4}\t accuracy: {accuracy.numpy():.4}'</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''结果展示，无需填写代码若报错请尝试安装ffmpeg'''</span>f<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>suptitle<span class="token punctuation">(</span><span class="token string">'Logistic Regression Example'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Y'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'X'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>line_d<span class="token punctuation">,</span> <span class="token operator">=</span> ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'fit_line'</span><span class="token punctuation">)</span>C1_dots<span class="token punctuation">,</span> <span class="token operator">=</span> ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'+'</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'actual_dots'</span><span class="token punctuation">)</span>C2_dots<span class="token punctuation">,</span> <span class="token operator">=</span> ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'g'</span> <span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'actual_dots'</span><span class="token punctuation">)</span>frame_text <span class="token operator">=</span> ax<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">0.95</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>horizontalalignment<span class="token operator">=</span><span class="token string">'left'</span><span class="token punctuation">,</span>verticalalignment<span class="token operator">=</span><span class="token string">'top'</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>ax<span class="token punctuation">.</span>transAxes<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># ax.legend()</span><span class="token keyword">def</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    line_d<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    C1_dots<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    C2_dots<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>line_d<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>C1_dots<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>C2_dots<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">animate</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>    xx <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> step<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> animation_fram<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    b <span class="token operator">=</span> animation_fram<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    c <span class="token operator">=</span> animation_fram<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    yy <span class="token operator">=</span> a<span class="token operator">/</span><span class="token operator">-</span>b <span class="token operator">*</span> xx <span class="token operator">+</span>c<span class="token operator">/</span><span class="token operator">-</span>b    line_d<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>xx<span class="token punctuation">,</span> yy<span class="token punctuation">)</span>    C1_dots<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>C1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    C2_dots<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>C2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    frame_text<span class="token punctuation">.</span>set_text<span class="token punctuation">(</span><span class="token string">'Timestep = %.1d/%.1d\nLoss = %.3f'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> len<span class="token punctuation">(</span>animation_fram<span class="token punctuation">)</span><span class="token punctuation">,</span> animation_fram<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>line_d<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>C1_dots<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>C2_dots<span class="token punctuation">,</span><span class="token punctuation">)</span>anim <span class="token operator">=</span> animation<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>f<span class="token punctuation">,</span> animate<span class="token punctuation">,</span> init_func<span class="token operator">=</span>init<span class="token punctuation">,</span>                               frames<span class="token operator">=</span>len<span class="token punctuation">(</span>animation_fram<span class="token punctuation">)</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> blit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>HTML<span class="token punctuation">(</span>anim<span class="token punctuation">.</span>to_html5_video<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="softmax-regression-exercise"><a href="#softmax-regression-exercise" class="headerlink" title="softmax_regression-exercise"></a>softmax_regression-exercise</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token triple-quoted-string string">'''生成数据集， 看明白即可无需填写代码'+' 从高斯分布采样 (X, Y) ~ N(3, 6, 1, 1, 0).'o' 从高斯分布采样 (X, Y) ~ N(6, 3, 1, 1, 0)'*' 从高斯分布采样 (X, Y) ~ N(7, 7, 1, 1, 0)'''</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> animation<span class="token punctuation">,</span> rc<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>display <span class="token keyword">import</span> HTML<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>cm <span class="token keyword">as</span> cm<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token operator">%</span>matplotlib inlinedot_num <span class="token operator">=</span> <span class="token number">100</span>x_p <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y_p <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>dot_num<span class="token punctuation">)</span>C1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>x_p<span class="token punctuation">,</span> y_p<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Tx_n <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y_n <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>dot_num<span class="token punctuation">)</span>C2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>x_n<span class="token punctuation">,</span> y_n<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Tx_b <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y_b <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dot_num<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>dot_num<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span>C3 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>x_b<span class="token punctuation">,</span> y_b<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Tplt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>C1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'+'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>C2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'g'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>C3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'*'</span><span class="token punctuation">)</span>data_set <span class="token operator">=</span> np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>C1<span class="token punctuation">,</span> C2<span class="token punctuation">,</span> C3<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>data_set<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''建立模型建立模型类，定义loss函数，定义一步梯度下降过程函数填空一：在__init__构造函数中建立模型所需的参数填空二：实现softmax的交叉熵损失函数(不使用tf内置的loss 函数)'''</span>epsilon <span class="token operator">=</span> <span class="token number">1e</span><span class="token operator">-</span><span class="token number">12</span><span class="token keyword">class</span> <span class="token class-name">SoftmaxRegression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''============================='''</span>        <span class="token comment" spellcheck="true">#todo 填空一，构建模型所需的参数 self.W, self.b 可以参考logistic-regression-exercise</span>        <span class="token triple-quoted-string string">'''============================='''</span>        self<span class="token punctuation">.</span>W <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> initial_value<span class="token operator">=</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> minval<span class="token operator">=</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> maxval<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>b <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> initial_value<span class="token operator">=</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>trainable_variables <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>W<span class="token punctuation">,</span> self<span class="token punctuation">.</span>b<span class="token punctuation">]</span>    @tf<span class="token punctuation">.</span>function    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inp<span class="token punctuation">)</span><span class="token punctuation">:</span>        logits <span class="token operator">=</span> tf<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>inp<span class="token punctuation">,</span> self<span class="token punctuation">.</span>W<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>b <span class="token comment" spellcheck="true"># shape(N, 3)</span>        pred <span class="token operator">=</span> tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">)</span>        <span class="token keyword">return</span> pred    @tf<span class="token punctuation">.</span>function<span class="token keyword">def</span> <span class="token function">compute_loss</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> label<span class="token punctuation">)</span><span class="token punctuation">:</span>    label <span class="token operator">=</span> tf<span class="token punctuation">.</span>one_hot<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>label<span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>int32<span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">,</span> depth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token triple-quoted-string string">'''============================='''</span>    <span class="token comment" spellcheck="true">#输入label shape(N, 3), pred shape(N, 3)</span>    <span class="token comment" spellcheck="true">#输出 losses shape(N,) 每一个样本一个loss</span>    <span class="token comment" spellcheck="true">#todo 填空二，实现softmax的交叉熵损失函数(不使用tf内置的loss 函数)</span>    <span class="token triple-quoted-string string">'''============================='''</span>    losses <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>pred<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        each_loss <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>label<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>expand_dims<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>pred<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        losses<span class="token punctuation">.</span>append<span class="token punctuation">(</span>each_loss<span class="token punctuation">)</span>    losses <span class="token operator">=</span> tf<span class="token punctuation">.</span>stack<span class="token punctuation">(</span>losses<span class="token punctuation">)</span>    loss <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>losses<span class="token punctuation">)</span>    accuracy <span class="token operator">=</span> tf<span class="token punctuation">.</span>reduce_mean<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>label<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>pred<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> loss<span class="token punctuation">,</span> accuracy@tf<span class="token punctuation">.</span>function<span class="token keyword">def</span> <span class="token function">train_one_step</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> optimizer<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> tf<span class="token punctuation">.</span>GradientTape<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tape<span class="token punctuation">:</span>        pred <span class="token operator">=</span> model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        loss<span class="token punctuation">,</span> accuracy <span class="token operator">=</span> compute_loss<span class="token punctuation">(</span>pred<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    grads <span class="token operator">=</span> tape<span class="token punctuation">.</span>gradient<span class="token punctuation">(</span>loss<span class="token punctuation">,</span> model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span>    optimizer<span class="token punctuation">.</span>apply_gradients<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>grads<span class="token punctuation">,</span> model<span class="token punctuation">.</span>trainable_variables<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> loss<span class="token punctuation">,</span> accuracy<span class="token triple-quoted-string string">'''实例化一个模型，进行训练'''</span>model <span class="token operator">=</span> SoftmaxRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>opt <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>learning_rate<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y <span class="token operator">=</span> list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span><span class="token operator">*</span>data_set<span class="token punctuation">)</span><span class="token punctuation">)</span>x <span class="token operator">=</span> list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">)</span><span class="token punctuation">)</span>x <span class="token operator">=</span> tf<span class="token punctuation">.</span>cast<span class="token punctuation">(</span>x<span class="token punctuation">,</span> dtype<span class="token operator">=</span>tf<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#转换类型</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    loss<span class="token punctuation">,</span> accuracy <span class="token operator">=</span> train_one_step<span class="token punctuation">(</span>model<span class="token punctuation">,</span> opt<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">50</span><span class="token operator">==</span><span class="token number">49</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">'loss: {loss.numpy():.4}\t accuracy: {accuracy.numpy():.4}'</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''结果展示，无需填写代码'''</span>        plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>C1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'+'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>C2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'g'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>C3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> C3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'*'</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>X<span class="token punctuation">,</span> Y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>inp <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>X<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Y<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>inp<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>Z <span class="token operator">=</span> model<span class="token punctuation">(</span>inp<span class="token punctuation">)</span>Z <span class="token operator">=</span> np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>Z<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>Z <span class="token operator">=</span> Z<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>Z<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MAMP无法打开Apache服务器</title>
      <link href="/2021/07/17/mamp-wu-fa-da-kai-apache-fu-wu-qi/"/>
      <url>/2021/07/17/mamp-wu-fa-da-kai-apache-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<p>最近装了一个MAMP打算学一下MySQL，结果打开发现Apache服务器不启动，折腾了一番后发现<br>在<strong>D:\MAMP\logs</strong>下的日志文件<strong>apache_error.log</strong>里的报错：</p><pre><code>[Sat Jul 17 00:04:40 2021] [warn] Init: Session Cache is not configured [hint: SSLSessionCache][Sat Jul 17 00:04:41 2021] [warn] pid file D:/MAMP/MAMP/bin/apache/logs/httpd.pid overwritten -- Unclean shutdown of previous Apache run?[Sat Jul 17 00:04:41 2021] [notice] Digest: generating secret for digest authentication ...[Sat Jul 17 00:04:41 2021] [notice] Digest: done[Sat Jul 17 00:04:43 2021] [notice] Apache/2.2.31 (Win32) DAV/2 mod_ssl/2.2.31 OpenSSL/1.0.2h mod_fcgid/2.3.9 mod_wsgi/3.4 Python/2.7.6 PHP/7.4.1 mod_perl/2.0.8 Perl/v5.16.3 configured -- resuming normal operations[Sat Jul 17 00:04:43 2021] [notice] Server built: May  6 2016 10:19:53[Sat Jul 17 00:04:43 2021] [crit] (22)Invalid argument: Parent: Failed to create the child process.[Sat Jul 17 00:04:43 2021] [crit] (OS 6)句柄无效。  : master_main: create child process failed. Exiting.</code></pre><p>google了一下在stackoverflow发现了一个<a href="https://stackoverflow.com/questions/41325997/cant-start-mamp-servers" target="_blank" rel="noopener">回答</a></p><p>解决方法是修改<strong>D:\MAMP\MAMP\conf\apache</strong>目录下的<strong>httpd.conf</strong>文件，将<strong>LoadModule perl_module modules/mod_perl.so</strong>这一行注释掉，再打开MAMP，成功启动Apache服务器</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C++ Primer 11.2.3节编程练习</title>
      <link href="/2020/07/22/2020-7-22-c-primer-11.2.3-jie-bian-cheng-lian-xi/"/>
      <url>/2020/07/22/2020-7-22-c-primer-11.2.3-jie-bian-cheng-lian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="编写程序，读入string和int的序列，将每个string和int存入一个pair中，pair保存在一个vector中"><a href="#编写程序，读入string和int的序列，将每个string和int存入一个pair中，pair保存在一个vector中" class="headerlink" title="编写程序，读入string和int的序列，将每个string和int存入一个pair中，pair保存在一个vector中"></a>编写程序，读入string和int的序列，将每个string和int存入一个pair中，pair保存在一个vector中</h2><pre class="line-numbers language-c++"><code class="language-c++">#include<iostream>#include<algorithm>#include<vector>#include<string>#include<list>#include<numeric>#include<functional>#include<iterator>#include<fstream>#include<map>#include<set>#include<cctype>#include<utility>using namespace std;int main(){    pair<string, int> sipair;    vector<pair<string, int>> sipvector;    string str;    int num;    while(cin >> str >> num){        sipair.first = str;        sipair.second = num;        sipvector.push_back(sipair);    }    for(auto i: sipvector){        cout << i.first << " " << i.second;        cout << endl;    }    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="在上一题的程序中，至少有三种创建pair的方法，编写此程序的三个版本，分别采用不同的方法创建pair"><a href="#在上一题的程序中，至少有三种创建pair的方法，编写此程序的三个版本，分别采用不同的方法创建pair" class="headerlink" title="在上一题的程序中，至少有三种创建pair的方法，编写此程序的三个版本，分别采用不同的方法创建pair"></a>在上一题的程序中，至少有三种创建pair的方法，编写此程序的三个版本，分别采用不同的方法创建pair</h2><pre class="line-numbers language-c++"><code class="language-c++">#include<iostream>#include<algorithm>#include<vector>#include<string>#include<list>#include<numeric>#include<functional>#include<iterator>#include<fstream>#include<map>#include<set>#include<cctype>#include<utility>using namespace std;using namespace placeholders;int main(){    pair<string, int> sipair;    vector<pair<string, int>> sipvector;    string str;    int num;    while(cin >> str >> num){        //pair<string, int> sipair(str, num); 第一种        //pair<string, int> sipair = {str, num}; 第二种        //sipair = make_pair(str, num); 第三种        sipair.first = str;        sipair.second = num;        sipvector.push_back(sipair);    }    for(auto i: sipvector){        cout << i.first << " " << i.second;        cout << endl;    }    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="扩展你在11-2-1节练习中编写的孩子姓名的map，添加一个pair的vector，保存孩子的名和生日"><a href="#扩展你在11-2-1节练习中编写的孩子姓名的map，添加一个pair的vector，保存孩子的名和生日" class="headerlink" title="扩展你在11.2.1节练习中编写的孩子姓名的map，添加一个pair的vector，保存孩子的名和生日"></a>扩展你在<a href="http://labjh.xyz/2020/07/22/c-primer-11.2.1-jie-bian-cheng-lian-xi/" target="_blank" rel="noopener">11.2.1节练习</a>中编写的孩子姓名的map，添加一个pair的vector，保存孩子的名和生日</h2><pre class="line-numbers language-c++"><code class="language-c++">#include<iostream>#include<algorithm>#include<vector>#include<string>#include<list>#include<numeric>#include<functional>#include<iterator>#include<fstream>#include<map>#include<set>#include<cctype>using namespace std;int main(){    map<string, vector<string>> family;    vector<pair<string, string>> name_birthday;    pair<string, string> nb;    cout << "New family or new child? f/c" << endl;    string option, family_name, birthday;    while(cin >> option){        if(option=="f"){            cout << "Please enter family name:" << endl;            cin >> family_name;            family[family_name];        }else if(option=="c"){            cout << "Which family?" << endl;            cin >> family_name;            string child_name;            cout << "Please enter child's name:" << endl;            cin >> child_name;            family[family_name].push_back(child_name);            nb.first = child_name;            cout << "Please enter child's birthday:" << endl;            cin >> birthday;            nb.second = birthday;            name_birthday.push_back(nb);        }else{            cerr << "Please enter correct option!" << endl;        }        cout << "New family or new child? f/c" << endl;    }    for(auto i=family.begin();i!=family.end();++i){        cout << (*i).first << " Family members: ";        for(auto j=(*i).second.begin();j!=(*i).second.end();++j){            cout << *j << " ";        }        cout << endl;    }    for(auto i: name_birthday){        cout << i.first << "'s birthday is: " << i.second << endl;    }    cout << endl;    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> C++ </tag>
            
            <tag> C++ Primer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ Primer 11.2.1节编程练习</title>
      <link href="/2020/07/22/c-primer-11.2.1-jie-bian-cheng-lian-xi/"/>
      <url>/2020/07/22/c-primer-11.2.1-jie-bian-cheng-lian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="练习11-7-定义一个map，关键字是家庭的姓，值是一个vector，保存家中孩子（们）的名，编写代码，实现添加新的家庭以及向已有家庭中添加新的孩子"><a href="#练习11-7-定义一个map，关键字是家庭的姓，值是一个vector，保存家中孩子（们）的名，编写代码，实现添加新的家庭以及向已有家庭中添加新的孩子" class="headerlink" title="练习11.7 定义一个map，关键字是家庭的姓，值是一个vector，保存家中孩子（们）的名，编写代码，实现添加新的家庭以及向已有家庭中添加新的孩子"></a>练习11.7 定义一个map，关键字是家庭的姓，值是一个vector，保存家中孩子（们）的名，编写代码，实现添加新的家庭以及向已有家庭中添加新的孩子</h2><pre class="line-numbers language-c++"><code class="language-c++">#include<iostream>#include<algorithm>#include<vector>#include<string>#include<list>#include<numeric>#include<functional>#include<iterator>#include<fstream>#include<map>#include<set>#include<cctype>using namespace std;int main(){    map<string, vector<string>> family;    cout << "New family or new child? f/c" << endl;    string option, family_name;    while(cin >> option){        if(option=="f"){            cout << "Please enter family name:" << endl;            cin >> family_name;            family[family_name];        }else if(option=="c"){            cout << "Which family?" << endl;            cin >> family_name;            string child_name;            cout << "Please enter child's name:" << endl;            cin >> child_name;            family[family_name].push_back(child_name);        }else{            cerr << "Please enter correct option!" << endl;        }        cout << "New family or new child? f/c" << endl;    }    for(auto i=family.begin();i!=family.end();++i){        cout << (*i).first << " ";        for(auto j=(*i).second.begin();j!=(*i).second.end();++j){            cout << *j << " ";        }        cout << endl;    }    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="编写一个程序，在一个vector而不是一个set中保存不重复的单词"><a href="#编写一个程序，在一个vector而不是一个set中保存不重复的单词" class="headerlink" title="编写一个程序，在一个vector而不是一个set中保存不重复的单词"></a>编写一个程序，在一个vector而不是一个set中保存不重复的单词</h2><pre class="line-numbers language-c++"><code class="language-c++">#include<iostream>#include<algorithm>#include<vector>#include<string>#include<list>#include<numeric>#include<functional>#include<iterator>#include<fstream>#include<map>#include<set>#include<cctype>using namespace std;int main(){    vector<string> words;    string word;    while(cin >> word){        if(find(words.begin(), words.end(), word)!=words.end()){            continue;        }else{            words.push_back(word);        }    }    for_each(words.begin(), words.end(), [](string i){cout << i << " ";});    cout << endl;    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> C++ </tag>
            
            <tag> C++ Primer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML速查列表</title>
      <link href="/2020/05/16/html-su-cha-lie-biao/"/>
      <url>/2020/05/16/html-su-cha-lie-biao/</url>
      
        <content type="html"><![CDATA[<p>转自<a href="https://www.runoob.com/html/html-quicklist.html" target="_blank" rel="noopener">菜鸟教程</a></p><h2 id="HTML基本文档"><a href="#HTML基本文档" class="headerlink" title="HTML基本文档"></a>HTML基本文档</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>文档标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>可见文本...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="基本标签"><a href="#基本标签" class="headerlink" title="基本标签"></a>基本标签</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>最大的标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span> . . . <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span> . . . <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span> . . . <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span> . . . <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span>最小的标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span> （换行）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span> （水平线）<span class="token comment" spellcheck="true">&lt;!-- 这是注释 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文本格式化"><a href="#文本格式化" class="headerlink" title="文本格式化"></a>文本格式化</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>粗体文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>计算机代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>强调文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>斜体文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>键盘输入<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>预格式化文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span>更小的文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>重要的文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>abbr</span><span class="token punctuation">></span></span> （缩写）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">></span></span> （联系信息）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bdo</span><span class="token punctuation">></span></span> （文字方向）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">></span></span> （从另一个源引用的部分）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">></span></span> （工作的名称）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span> （删除的文本）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span> （插入的文本）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sub</span><span class="token punctuation">></span></span> （下标文本）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sup</span><span class="token punctuation">></span></span> （上标文本）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><pre class="line-numbers language-html"><code class="language-html">普通的链接：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.example.com/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>链接文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>图像链接： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.example.com/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>URL<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>替换文本<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>邮件链接： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mailto:webmaster@example.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>发送e-mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>书签：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tips<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提示部分<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#tips<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>跳到提示部分<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>URL<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>替换文本<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>42<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>42<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="样式-区块"><a href="#样式-区块" class="headerlink" title="样式/区块"></a>样式/区块</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector">h1 </span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">p </span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>文档中的块级元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>文档中的内联元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>项目<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>项目<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第一项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第二项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>项目 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>描述项目 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>项目 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>描述项目 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>表格标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>表格标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>表格数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>表格数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo_iframe.htm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo_form.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post/get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Send<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>樱桃<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comment<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token entity" title="&lt;">&amp;lt;</span> 等同于 &lt;<span class="token entity" title="&gt;">&amp;gt;</span> 等同于 ><span class="token entity" title="&#169;">&amp;#169;</span> 等同于 ©<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C程序设计语言读书笔记2</title>
      <link href="/2020/04/04/c-cheng-xu-she-ji-yu-yan-du-shu-bi-ji-2/"/>
      <url>/2020/04/04/c-cheng-xu-she-ji-yu-yan-du-shu-bi-ji-2/</url>
      
        <content type="html"><![CDATA[<h2 id="练习1-12"><a href="#练习1-12" class="headerlink" title="练习1-12"></a>练习1-12</h2><p>编写一个程序，以每行一个单词的形式打印其输出</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> IN 1</span><span class="token macro property">#<span class="token directive keyword">define</span> OUT 0</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> state<span class="token punctuation">,</span> c<span class="token punctuation">;</span>    state <span class="token operator">=</span> OUT<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">>=</span><span class="token number">65</span><span class="token operator">&amp;&amp;</span>c<span class="token operator">&lt;=</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>c<span class="token operator">>=</span><span class="token number">97</span><span class="token operator">&amp;&amp;</span>c<span class="token operator">&lt;=</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            state <span class="token operator">=</span> IN<span class="token punctuation">;</span>            <span class="token function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>state<span class="token operator">==</span>IN<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            state <span class="token operator">=</span> OUT<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> K&amp;R </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ Primer1.6节练习</title>
      <link href="/2020/04/02/c-primer1.6-jie-lian-xi/"/>
      <url>/2020/04/02/c-primer1.6-jie-lian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="书店程序"><a href="#书店程序" class="headerlink" title="书店程序"></a>书店程序</h2><p>头文件Sales_item.h 包含Sales_item类 <a href="https://ptgmedia.pearsoncmg.com/images/9780321714114/downloads/GCC_4_7_0.zip" target="_blank" rel="noopener">下载链接</a></p><pre class="line-numbers language-c++"><code class="language-c++">#include<iostream>#include"Sales_item.h"int main(){    Sales_item total;    //保存下一条交易目录的变量    if(std::cin >> total){    //读入第一条交易数据        Sales_item trans;    //保存和的变量        while(std::cin >> trans){    //读入并处理剩余交易目录            if(total.isbn()==trans.isbn()){        //如果处理的书相同                total += trans;    //更新总销售额            }else{    //打印前一本书的结果                std::cout << total << std::endl;                total = trans;    //令total表示下一本书的销售额            }        }        std::cout << total << std::endl;    }else{    //没有输入        std::cerr << "没有数据输入！" << std::endl;        return -1;    }    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>成员函数</strong>（member function）是定义为类的一部分函数，有时也被称为<strong>方法</strong>（method）</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 练习 </tag>
            
            <tag> C++ </tag>
            
            <tag> C++ Primer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C程序设计语言读书笔记1</title>
      <link href="/2020/04/01/c-cheng-xu-she-ji-yu-yan-du-shu-bi-ji-1/"/>
      <url>/2020/04/01/c-cheng-xu-she-ji-yu-yan-du-shu-bi-ji-1/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="练习-1-8"><a href="#练习-1-8" class="headerlink" title="练习 1-8"></a>练习 1-8</h1><h2 id="编写一个统计空格、制表符与换行符个数的程序"><a href="#编写一个统计空格、制表符与换行符个数的程序" class="headerlink" title="编写一个统计空格、制表符与换行符个数的程序"></a>编写一个统计空格、制表符与换行符个数的程序</h2><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> cnts<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> cntt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> cntn<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">char</span> c<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//声明变量</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//输入字符，输入为EOF时退出循环</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//检测空格</span>            cnts<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\t'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token comment" spellcheck="true">//检测制表符</span>            cntt<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token comment" spellcheck="true">//检测换行符</span>            cntn<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d %d"</span><span class="token punctuation">,</span> cnts<span class="token punctuation">,</span> cntt<span class="token punctuation">,</span> cntn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="练习1-9"><a href="#练习1-9" class="headerlink" title="练习1-9"></a>练习1-9</h1><h2 id="编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替"><a href="#编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替" class="headerlink" title="编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替"></a>编写一个将输入复制到输出的程序，并将其中连续的多个空格用一个空格代替</h2><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> c<span class="token punctuation">;</span><span class="token keyword">int</span> flag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//当空格第一次出现输出空格，否则不输出</span>                <span class="token function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>                flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//将空格的状态初始化</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="练习1-10"><a href="#练习1-10" class="headerlink" title="练习1-10"></a>练习1-10</h1><h2 id="编写一个将输入复制到输出的程序，并将其中的制表符替换为-t，把回退符替换为-b，把反斜杠替换为"><a href="#编写一个将输入复制到输出的程序，并将其中的制表符替换为-t，把回退符替换为-b，把反斜杠替换为" class="headerlink" title="编写一个将输入复制到输出的程序，并将其中的制表符替换为\t，把回退符替换为\b，把反斜杠替换为\"></a>编写一个将输入复制到输出的程序，并将其中的制表符替换为\t，把回退符替换为\b，把反斜杠替换为\</h2><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> c<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token constant">EOF</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\t'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出'\'</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//输出't' 下面同理</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\b'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> K&amp;R </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国大陆购买Xbox Game Pass的方法</title>
      <link href="/2020/03/24/zhong-guo-da-lu-gou-mai-xbox-game-pass-de-fang-fa/"/>
      <url>/2020/03/24/zhong-guo-da-lu-gou-mai-xbox-game-pass-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="在网页订阅（需要梯子）"><a href="#在网页订阅（需要梯子）" class="headerlink" title="在网页订阅（需要梯子）"></a>在网页订阅（需要梯子）</h2><ol><li><a href="https://www.icats.cc/" target="_blank" rel="noopener">梯子</a></li><li>更改酸酸乳的配置<br> 右键小飞机图标<br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/pic1.png" alt="img1"><br> 代理规则选择全局<br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200324182641.png" alt="img2"><br> 系统代理模式选择全局</li><li>进入<a href="https://www.xbox.com/zh-HK/xbox-game-pass/pc-games?xr=shellnav" target="_blank" rel="noopener">官网</a></li><li>点击右上角<strong>开始使用</strong>下载客户端</li><li>进入<a href="https://www.xbox.com/zh-hk/xbox-game-pass/#join" target="_blank" rel="noopener">购买页面</a>购买</li><li>支持支付宝连续包月付款，不支持花呗。支付完成后就可以进入客户端下载XGP提供的游戏了</li></ol><h2 id="在客户端订阅"><a href="#在客户端订阅" class="headerlink" title="在客户端订阅"></a>在客户端订阅</h2><ol><li>进入<a href="https://www.xbox.com/zh-hk/" target="_blank" rel="noopener">香港xbox官网</a></li><li>点击xbox game pass for pc<br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200324183539.png" alt="img3"><br> 点击右上角<strong>开始使用</strong>下载客户端</li><li>更改自己的微软账户地址；进入<a href="https://www.microsoft.com/zh-CN/" target="_blank" rel="noopener">微软官网</a></li><li>右上角进入<strong>我的Microsoft账户</strong>，点击<strong>更多操作</strong>–&gt;<strong>编辑个人资料</strong>–&gt;<strong>编辑国家/地区</strong>改为<strong>香港特别行政区</strong></li><li>进入客户端并进入<strong>settings</strong><img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200324185440.png" alt="img4"></li><li>进入<strong>Subscriptions</strong>下的选项，之后选择<strong>Xbox Game Pass for PC(Beta)</strong>进入支付页面，支持支付宝，不支持花呗（这里不知道为什么一直显示我的账户在United States）</li></ol><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>凡是微软发行的游戏会一直在XGP上，其他游戏在一个月内可以玩但是一个月之后就不一定了。</p>]]></content>
      
      
      <categories>
          
          <category> gaming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xbox </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>递归实现进制转换（C语言描述）</title>
      <link href="/2020/03/24/di-gui-shi-xian-jin-zhi-zhuan-huan-c-yu-yan-miao-shu/"/>
      <url>/2020/03/24/di-gui-shi-xian-jin-zhi-zhuan-huan-c-yu-yan-miao-shu/</url>
      
        <content type="html"><![CDATA[<pre><code>#include&lt;stdio.h&gt;void print(int x, int n){    if(x%n&lt;10){        printf(&quot;%d&quot;, x%n);    }else{        printf(&quot;%c&quot;, x-10+&#39;a&#39;);    }}void jzzh(int x, int n){    if(x){        jzzh(x/n, n);        print(x, n);    }}int main(){    int x, n;    scanf(&quot;%d %d&quot;, &amp;x, &amp;n);    jzzh(x, n);    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习共产主义的一些资源</title>
      <link href="/2020/03/23/xue-xi-gong-chan-zhu-yi-de-yi-xie-zi-yuan/"/>
      <url>/2020/03/23/xue-xi-gong-chan-zhu-yi-de-yi-xie-zi-yuan/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200503113123.jpg" alt=""></p><h2 id="关于这篇文章"><a href="#关于这篇文章" class="headerlink" title="关于这篇文章"></a>关于这篇文章</h2><p>当初建立这个博客的时候只是打算记录本人在技术上的学习历程，不过我也希望能分享一些我认为有趣的东西，于是就有了这篇文章。<br><strong>注意：</strong>我并不打算改变任何人的政治倾向，如果本篇文章让你感到不适请<strong>关闭</strong>页面。</p><h2 id="一个小测试"><a href="#一个小测试" class="headerlink" title="一个小测试"></a>一个小测试</h2><p><strong>注意：</strong>本测试仅供参考！<br><a href="https://www.politiscales.net/zh_CN/" target="_blank" rel="noopener">政治倾向测试</a></p><p>附上一个我的测试结果<br><img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/46%29RM5NNVHZC_E6O78KAQBP.png" alt="我的测试结果"></p><h2 id="国际歌"><a href="#国际歌" class="headerlink" title="国际歌"></a>国际歌</h2><p><a href="https://music.163.com/#/playlist?id=92856859" target="_blank" rel="noopener">国际歌多语种版</a>（来自网易云音乐）<br><strong>英特纳雄耐尔就一定要实现</strong></p><h2 id="电子书资源"><a href="#电子书资源" class="headerlink" title="电子书资源"></a>电子书资源</h2><ol><li><a href="https://www.marxists.org/" target="_blank" rel="noopener">马克思主义文库（英文）</a><br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200504003213.png" alt="马克思主义文库"><br> <a href="https://www.marxists.org/chinese/" target="_blank" rel="noopener">这个是中文版</a><br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200504003429.png" alt="中文版块"></li><li><a href="https://monthlyreview.org/" target="_blank" rel="noopener">每月评论（英文）</a><br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200504003911.png" alt="每月评论"></li><li><a href="http://45.32.41.3/" target="_blank" rel="noopener">无产阶级图书馆</a><br> <img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200504004138.png" alt="无产阶级图书馆"></li></ol><h2 id="论坛"><a href="#论坛" class="headerlink" title="论坛"></a>论坛</h2><p><a href="https://www.reddit.com/r/communism/" target="_blank" rel="noopener">Reddit上的Communism板块（英文）</a><br><img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/20200504210356.png" alt="论坛"></p><h2 id="基础学习计划"><a href="#基础学习计划" class="headerlink" title="基础学习计划"></a>基础学习计划</h2><p>点击链接可直接阅读<br>翻译自<a href="https://www.reddit.com/r/communism/comments/wisiw/basic_marxismleninism_study_plan/" target="_blank" rel="noopener">r/communism</a></p><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><ul><li><a href="https://www.marxists.org/chinese/lenin/12.htm" target="_blank" rel="noopener">马克思主义的三个来源和三个组成部分</a>.列宁. </li><li><a href="https://www.marxists.org/chinese/lenin/14.htm" target="_blank" rel="noopener">卡尔·马克思</a>.列宁.</li><li><a href="https://www.marxists.org/chinese/marx/01.htm" target="_blank" rel="noopener">共产党宣言</a>.马克思, 恩格斯.</li></ul><h3 id="历史唯物主义"><a href="#历史唯物主义" class="headerlink" title="历史唯物主义"></a>历史唯物主义</h3><ul><li><a href="https://www.marxists.org/chinese/marx/marxist.org-chinese-marx-1846.htm#_ftn1" target="_blank" rel="noopener">德意志意识形态</a>.马克思, 恩格斯.</li></ul><h3 id="科学社会主义"><a href="#科学社会主义" class="headerlink" title="科学社会主义"></a>科学社会主义</h3><ul><li><a href="https://www.marxists.org/chinese/engels/1880/01.htm" target="_blank" rel="noopener">社会主义从空想到科学的发展</a>.恩格斯.</li><li><a href="https://www.marxists.org/chinese/lenin/1901-1902/index.htm" target="_blank" rel="noopener">怎么办？</a>.列宁.</li><li><a href="https://www.marxists.org/chinese/lenin/191708-09/index.htm" target="_blank" rel="noopener">国家与革命</a>.列宁.</li><li>列宁. 反对修正主义与机会主义的文本：</li><li><a href="https://www.marxists.org/chinese/lenin/11.htm" target="_blank" rel="noopener">马克思学说的历史命运</a></li><li><a href="https://www.marxists.org/chinese/lenin-cworks/27/017.htm" target="_blank" rel="noopener">机会主义与第二国际的破产</a></li><li><a href="https://www.marxists.org/chinese/lenin/marxist.org-chinese-lenin-1915-5.htm" target="_blank" rel="noopener">第二国际的破产</a></li><li><a href="https://www.marxists.org/chinese/lenin-cworks/28/005.htm" target="_blank" rel="noopener">帝国主义和社会主义运动中的分裂</a></li><li><a href="https://www.marxists.org/chinese/lenin-cworks/20/014.htm" target="_blank" rel="noopener">论马克思主义历史发展中的几个特点</a></li><li><a href="https://www.marxists.org/chinese/lenin/09.htm" target="_blank" rel="noopener">马克思主义和修正主义</a></li><li><a href="https://www.marxists.org/chinese/lenin/13.htm" target="_blank" rel="noopener">马克思主义和改良主义</a></li><li><a href="https://www.marxists.org/chinese/lenin-cworks/39/001.htm" target="_blank" rel="noopener">共产主义运动中的“左派”幼稚病</a>.列宁.</li><li><a href="https://www.marxists.org/chinese/marx-engels/20/001.htm" target="_blank" rel="noopener">反杜林论</a>.恩格斯.</li><li><a href="https://www.marxists.org/chinese/pdf/russian_communists/stalin/23.pdf" target="_blank" rel="noopener">论列宁主义基础</a>.斯大林.</li></ul><h3 id="哲学"><a href="#哲学" class="headerlink" title="哲学"></a>哲学</h3><ul><li><a href="https://www.marxists.org/chinese/maozedong/marxist.org-chinese-mao-193708.htm" target="_blank" rel="noopener">矛盾论</a>.毛泽东.</li><li><a href="https://www.marxists.org/chinese/engels/marxist.org-chinese-engels-1888.htm" target="_blank" rel="noopener">费尔巴哈和德国古典哲学的终结</a>.恩格斯.</li><li><a href="https://www.marxists.org/chinese/marx/capital/index.htm" target="_blank" rel="noopener">资本论第一卷资本的生产过程</a>.马克思.</li><li><a href="https://www.marxists.org/chinese/lenin-cworks/27/041.htm" target="_blank" rel="noopener">帝国主义是资本主义的最高阶段</a>.列宁.</li></ul><p>最后可以看看<a href="https://www.marxists.org/chinese/maozedong/index.htm" target="_blank" rel="noopener">毛泽东选集</a></p><h2 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h2><p>推荐一个微信公众号<br><strong>国际红色通讯2nd</strong><br>发布关于国际共运的新闻<br><a href="https://www.zhihu.com/people/rednews" target="_blank" rel="noopener">知乎页面</a></p><p>全世界无产者联合起来！<br>يا عمال العالم اتحدوا!<br>Պրոլետարներ բոլոր երկրների, միացե՜ք<br>Bütün ölkələrin proleterleri, birləşin!<br>দুনিযার মজুর এক হও!<br>Пралетарыі ўсіх краін, яднайцеся!<br>Proleteri svih zemalja, ujedinite se!<br>Пролетарии от всички страни, съединявайте се!<br>Proletaris de tots els països, Uniu-vos!<br>Proleteri svih zemalja, ujedinite se!<br>Proletáři všech zemí, spojte se!<br>Proletarer i alle lande, foren jer!<br>Proletariërs aller landen, verenigt U!<br>Kõigi maade proletaarlased, ühinege!<br>Workers of the world, unite!<br>Herrialde guztietako proletarioak, elkar zaitezte!<br>Mga manggagawa ng mundo, magkaisa!<br>Kaikkien maiden proletaarit, liittykää yhteen!<br>Prolétaires de tous les pays, unissez-vous!<br>Proletarier aller Länder, vereinigt euch!<br>პროლეტარებო ყველა ქვეყნისა, შეერთდით!<br>Προλετάριοι όλου του κόσμου, ενωθείτε!<br>פועלי כל העולם התאחדו!<br>Világ proletárjai, egyesüljetek!<br>Öreigar allra landa, sameinist!<br>Para pekerja di seluruh dunia, bersatulah!!<br>Oibrithe an domhain, aontaigh!<br>Lavoratori di tutto il mondo, unitevi!<br>万国の労働者よ、団結せよ!<br>만국의 노동자들이여, 단결하라!<br>Пролетери од сите земји обединете се!<br>Mpiasa eran’izao tontolo izao, mampiray!<br>Kaum buruh semua negeri, bersatulah!<br>Чыла элласе пролетарий-влак ушныза!<br>Орон бүрийн пролетари нар нэгдэгтүн!<br>Arbeidere i alle land, foren dere!!<br>Kirêkaranî/karkerên dinya/cîhanê yekgirin/hevgirin!<br>کارگران جهان متحد شوید<br>Proletariusze wszystkich krajów, łączcie się!<br>Trabalhadores do mundo, uni-vos!<br>Proletari din toate țările, uniți-vă!<br>Пролетарии всех стран, соединяйтесь!<br>Proleteri svih zemalja, ujedinite se!<br>Proletári všetkých krajín, spojte sa!<br>Proletarci vse dezel, zdruzite se!<br>¡Trabajadores del mundo, uníos!<br>Arbetare i alla länder, förenen eder!<br>Пролетарҳои ҳамаи мамлакатҳо, як шавед!<br>Барлык илләрнең пролетарийлары, берләшегез!<br>Bütün ülkelerin işçileri, birleşin!<br>Пролетарі всіх країн, єднайтеся!<br>Vô sản toàn thế giới, đoàn kết lại!<br>פראָלעטאריער פון אלע לענדער, פאראייניקט זיך!<br>Proletoj el ĉiuj landoj, unuiĝu!</p>]]></content>
      
      
      <categories>
          
          <category> thought </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 共产主义 </tag>
            
            <tag> 马克思 </tag>
            
            <tag> 恩格斯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用WinSCP将本地文件上传至远程服务器</title>
      <link href="/2020/03/17/yong-winscp-jiang-ben-di-wen-jian-shang-chuan-zhi-yuan-cheng-fu-wu-qi/"/>
      <url>/2020/03/17/yong-winscp-jiang-ben-di-wen-jian-shang-chuan-zhi-yuan-cheng-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><a href="https://winscp.net/eng/download.php" target="_blank" rel="noopener">下载地址</a></p><p>安装完成后出现如下界面：<br><img src="https://raw.githubusercontent.com/iAyoD/blogpic/master/img/winscp1.png" alt="img"></p><p>文件协议选择SFTP；主机名为服务器的外网IP. 然后输入服务器的系统用户名和密码即可登录。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WinSCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cannot get/错误</title>
      <link href="/2020/03/17/cannot-get-cuo-wu/"/>
      <url>/2020/03/17/cannot-get-cuo-wu/</url>
      
        <content type="html"><![CDATA[<p>如果_post文件夹下没有.md文件就会出现这种错误。</p><p>如果是其他问题导致可以尝试npm install.</p><p>或者进行以下步骤</p><ol><li>hexo init <folder></li><li>cd folder</li><li>npm install</li><li>npm install hexo-server –save</li><li>npm s</li></ol>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
